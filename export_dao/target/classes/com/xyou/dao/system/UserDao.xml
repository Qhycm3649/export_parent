<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xyou.dao.system.UserDao">

    <resultMap id="BaseResultMap" type="com.xyou.domain.system.User">
        <id column="user_id" property="id"/>
        <result column="dept_id" property="deptId"/>
        <result column="email" property="email"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="state" property="state"/>
        <result column="company_id" property="companyId"/>
        <result column="company_name" property="companyName"/>
        <result column="dept_name" property="deptName"/>
        <result column="manager_id" property="managerId"/>
        <result column="join_date" property="joinDate"/>
        <result column="salary" property="salary"/>
        <result column="birthday" property="birthday"/>
        <result column="gender" property="gender"/>
        <result column="station" property="station"/>
        <result column="telephone" property="telephone"/>
        <result column="degree" property="degree"/>
        <result column="remark" property="remark"/>
        <result column="order_no" property="orderNo"/>
    </resultMap>


    <!--查询所有的用户-->
    <select id="findAllUser" resultMap="BaseResultMap">
         SELECT * FROM pe_user where company_id=#{companyId}
    </select>

    <!--通过id进行查询用户-->
    <select id="findByUserId" resultMap="BaseResultMap">
        select * from pe_user where user_id=#{id}
    </select>

    <!--根据id删除-->
    <delete id="delete">
      delete from pe_user where user_id = #{id}
    </delete>


    <!--保存-->
    <insert id="save">
        insert into pe_user(user_id, dept_id, email, user_name, password, state, company_id,
        company_name, dept_name, manager_id, join_date, salary, birthday,
        gender, station, telephone, degree, remark, order_no)
        values(
            #{id},
            #{deptId},
            #{email},
            #{userName},
            #{password},
            #{state},
            #{companyId},
            #{companyName},
            #{deptName},
            #{managerId},
            #{joinDate},
            #{salary},
            #{birthday},
            #{gender},
            #{station},
            #{telephone},
            #{degree},
            #{remark},
            #{orderNo}
        )
    </insert>


    <!--修改-->
    <update id="update">
        update pe_user
        set dept_id = #{deptId},
        email = #{email},
        user_name = #{userName},
        password = #{password},
        state = #{state},
        company_id = #{companyId},
        company_name = #{companyName},
        dept_name = #{deptName},
        manager_id = #{managerId},
        join_date = #{joinDate},
        salary = #{salary},
        birthday = #{birthday},
        gender = #{gender},
        station = #{station},
        telephone = #{telephone},
        degree = #{degree},
        remark = #{remark},
        order_no = #{orderNo}
        where user_id = #{id}
    </update>


    <!--   //根据用户的id查询用户的角色
    Integer findUserRoleByUserId(String id);-->
    <select id="findUserRoleByUserId" resultType="Integer">
        SELECT COUNT(*) FROM pe_role_user ru WHERE ru.`user_id`=#{userId}
    </select>

    <select id="findUserByEmail" resultMap="BaseResultMap">
        select * from pe_user where email=#{emain}
    </select>


    <!--// 根据用户的id删除用户的所有角色
    void deleteUserRoleByUserId(String userid);-->
    <delete id="deleteUserRoleByUserId">
        delete from pe_role_user where user_id=#{userId}
    </delete>


    <!--  //给用户重新分配角色
      void addUserRoles(@Param("userid") String userid,@Param("roleIds") String[] roleIds);-->
    <insert id="addUserRoles">
        insert into pe_role_user VALUES
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{userid},#{roleId})
        </foreach>
    </insert>
</mapper>